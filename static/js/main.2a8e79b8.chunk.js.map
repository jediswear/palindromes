{"version":3,"sources":["actions/file.action.js","reducers/file.reducer.js","actions/palindrome.action.js","reducers/palindrome.reducer.js","actions/error.actions.js","reducers/error.reducer.js","store.js","utils/getPalindromes.js","components/DisplayContent.js","components/DisplayResults.js","styles/Button.js","components/MaterialIcon.js","components/ImportFile.js","components/Header.js","components/App.js","index.js"],"names":["clearFile","type","initialState","content","name","fileReducer","state","action","clearPalindromes","show","list","reducer","sort","a","b","palindrome","length","removeError","msg","errorReducer","rootReducer","combineReducers","file","palindromeReducer","error","store","createStore","findPalindrome","text","leftPos","rightPos","reg","res","leftChar","rightChar","test","start","end","undefined","substring","getPalindromes","formattedText","toLowerCase","results","i","push","findAll","map","el","filter","find","insidePalindrome","Highlighted","styled","span","connect","str","reduce","acc","substr","mergePalindromesToText","key","Results","div","props","theme","borderColor","borderRadius","back","ResultsCaption","Text","Longest","longest","Button","button","hidden","white","mainAccent","mainAccentLight","MaterialIcon","children","className","ImportButton","Input","input","mapDispatchToProps","setFileContent","setFileInfo","setError","resetApp","as","accept","onClick","e","target","value","onChange","files","some","format","reader","FileReader","readAsText","onload","this","result","Nav","LogoWrapper","Logo","LogoSub","NavSub","mainDark","Message","RemoveBtn","showPalindromes","setPalindromes","message","style","marginLeft","palindromes","Wrapper","App","ReactDOM","render","main","document","getElementById"],"mappings":"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","file":"static/js/main.2a8e79b8.chunk.js","sourcesContent":["export const SET_FILE_CONTENT = 'SET_FILE_CONTENT'\r\nexport const SET_FILE_INFO = 'SET_FILE_INFO'\r\nexport const CLEAR_FILE = 'CLEAR_FILE'\r\n\r\nexport const setFileContent = (content) => ({\r\n  type: SET_FILE_CONTENT,\r\n  content\r\n})\r\n\r\nexport const setFileInfo = (name) => ({\r\n  type: SET_FILE_INFO,\r\n  name\r\n})\r\n\r\nexport const clearFile = () => ({\r\n  type: CLEAR_FILE\r\n})\r\n","import { CLEAR_FILE, SET_FILE_CONTENT, SET_FILE_INFO } from '../actions/file.action'\r\n\r\nconst initialState = {\r\n  content: null,\r\n  name: null\r\n}\r\n\r\nconst fileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_FILE_CONTENT:\r\n      return {\r\n        ...state,\r\n        content: action.content\r\n      }\r\n    case SET_FILE_INFO:\r\n      return {\r\n        ...state,\r\n        name: action.name\r\n      }\r\n    case CLEAR_FILE:\r\n      return {\r\n        ...state,\r\n        content: null,\r\n        name: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default fileReducer\r\n","export const SHOW_PALINDROMES = 'SHOW_PALINDROMES'\r\nexport const SET_PALINDROMES_LIST = 'SET_PALINDROMES_LIST'\r\nexport const CLEAR_PALINDROMES = 'CLEAR_PALINDROMES'\r\n\r\nexport const showPalindromes = () => ({\r\n  type: SHOW_PALINDROMES\r\n})\r\n\r\nexport const setPalindromes = (list) => ({\r\n  type: SET_PALINDROMES_LIST,\r\n  list\r\n})\r\n\r\nexport const clearPalindromes = () => ({\r\n  type: CLEAR_PALINDROMES\r\n})\r\n","import { CLEAR_PALINDROMES, SET_PALINDROMES_LIST, SHOW_PALINDROMES } from '../actions/palindrome.action'\r\n\r\nconst initialState = {\r\n  show: false,\r\n  list: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_PALINDROMES:\r\n      return {\r\n        ...state,\r\n        show: true\r\n      }\r\n    case SET_PALINDROMES_LIST:\r\n      const list = action.list.sort((a, b) => b.palindrome.length - a.palindrome.length)\r\n\r\n      return {\r\n        ...state,\r\n        list\r\n      }\r\n    case CLEAR_PALINDROMES:\r\n      return {\r\n        ...state,\r\n        list: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","export const SET_ERROR = 'SET_ERROR'\r\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\r\n\r\nexport const setError = (msg) => ({\r\n  type: SET_ERROR,\r\n  msg\r\n})\r\n\r\nexport const removeError = () => ({\r\n  type: REMOVE_ERROR\r\n})\r\n","import { SET_ERROR, REMOVE_ERROR } from '../actions/error.actions'\r\n\r\nconst initialState = {\r\n  msg: null\r\n}\r\n\r\nconst errorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        msg: action.msg\r\n      }\r\n    case REMOVE_ERROR:\r\n      return {\r\n        ...state,\r\n        msg: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default errorReducer\r\n","import { createStore, combineReducers } from 'redux'\r\nimport fileReducer from './reducers/file.reducer'\r\nimport palindromeReducer from './reducers/palindrome.reducer'\r\nimport errorReducer from './reducers/error.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  file: fileReducer,\r\n  palindrome: palindromeReducer,\r\n  error: errorReducer\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store\r\n","const findPalindrome = (text, leftPos, rightPos) => {\r\n  const reg = /[^a-zA-Z]/\r\n  const res = {}\r\n  let leftChar = text[leftPos]\r\n  let rightChar = text[rightPos]\r\n\r\n  // spec symbol cant be center of symmetry\r\n  if (reg.test(text[leftPos + 1])) {\r\n    return res\r\n  }\r\n\r\n  while (leftPos >= 0 && rightPos < text.length) {\r\n    // if chars are not equal && left + right chars are not spec symbols\r\n    if (leftChar !== rightChar && !reg.test(leftChar) && !reg.test(rightChar)) {\r\n      if (!reg.test(text[res.start - 1]) || !reg.test(text[res.end])) {\r\n        res.start = res.end = undefined\r\n      }\r\n      break\r\n    }\r\n\r\n    // if left char is spec symbol\r\n    if (reg.test(leftChar)) {\r\n      leftChar = text[--leftPos]\r\n      continue\r\n    }\r\n\r\n    // if right char is spec symbol\r\n    if (reg.test(rightChar)) {\r\n      rightChar = text[++rightPos]\r\n      continue\r\n    }\r\n\r\n    res.palindrome = text.substring(leftPos, rightPos + 1)\r\n    res.start = leftPos\r\n    res.end = rightPos + 1\r\n    leftChar = text[--leftPos]\r\n    rightChar = text[++rightPos]\r\n  }\r\n\r\n  return res\r\n}\r\n\r\nexport const findAll = (text) => {\r\n  const formattedText = text.toLowerCase()\r\n  const results = []\r\n  for (let i = 1; i < formattedText.length; i++) {\r\n    let start = i - 1\r\n    let end = i + 1\r\n    let res = findPalindrome(formattedText, start, end)\r\n\r\n    if ((res.start || res.end) && res.palindrome.length > 2) {\r\n      results.push(res)\r\n    }\r\n\r\n    start = i - 1\r\n    end = i\r\n    res = findPalindrome(formattedText, start, end)\r\n    if ((res.start || res.end) && res.palindrome.length > 2) {\r\n      results.push(res)\r\n    }\r\n  }\r\n\r\n  return results\r\n}\r\n\r\nexport const getPalindromes = (text) => {\r\n  const list = findAll(text)\r\n\r\n  return list.map(el => {\r\n    return {\r\n      ...el,\r\n      palindrome: text.substring(el.start, el.end)\r\n    }\r\n  }).filter((palindrome, i, list) => {\r\n    const res = list.find(insidePalindrome => {\r\n      return palindrome.start - insidePalindrome.start > 0 && insidePalindrome.end - palindrome.end > 0\r\n    })\r\n\r\n    return !res\r\n  })\r\n}\r\n\r\nexport const mergePalindromesToText = (str, list) => {\r\n  let start = 0\r\n  const fullList = [...list, ''].sort((a, b) => a.start - b.start)\r\n\r\n  return fullList.reduce((acc, palindrome) => {\r\n    const substr = str.substring(start, palindrome.start)\r\n    start = palindrome.end\r\n    return [...acc, substr, palindrome]\r\n  }, [])\r\n}\r\n","import React from 'react'\r\nimport { mergePalindromesToText } from '../utils/getPalindromes'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nconst Highlighted = styled.span`\r\n  background: rgba(255, 255, 0, 0.31);\r\n  transition: .3s;\r\n\r\n  &:hover {\r\n    background: rgba(255, 0, 0, 0.6);\r\n  }\r\n\r\n`\r\n\r\nconst DisplayContent = ({ content, list }) => {\r\n  return mergePalindromesToText(content, list).map((el, i) => {\r\n    if (el.palindrome) {\r\n      return (\r\n        <Highlighted key={i}>\r\n          {el.palindrome}\r\n        </Highlighted>\r\n      )\r\n    }\r\n\r\n    return el\r\n  })\r\n}\r\n\r\nconst mapStateToProps = ({ file, palindrome }) => ({\r\n  content: file.content,\r\n  list: palindrome.list\r\n})\r\n\r\nexport default connect(mapStateToProps)(DisplayContent)\r\n","import React from 'react'\r\nimport DisplayContent from './DisplayContent'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nconst Results = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  max-height: 500px;\r\n  box-sizing: border-box;\r\n  padding: 20px 15px;\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  border-bottom-left-radius: ${props => props.theme.borderRadius};\r\n  border-bottom-right-radius: ${props => props.theme.borderRadius};\r\n  font-size: 14px;\r\n  background: ${props => props.theme.back};\r\n`\r\nconst ResultsCaption = styled.span`\r\n  margin-bottom: 5px;\r\n`\r\nconst Text = styled.div`\r\n  flex-grow: 1;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  line-height: 20px;\r\n  overflow-x: auto;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n`\r\nconst Longest = styled.div`\r\n  min-width: 150px;\r\n  padding: 15px;\r\n  border: 1px solid ${props => props.theme.borderColor};\r\n  border-radius: ${props => props.theme.borderRadius};\r\n`\r\n\r\nconst DisplayResults = ({ file, palindrome: { show, list } }) => {\r\n\r\n  const longest = list.length > 0 && list[0].palindrome\r\n\r\n  return (\r\n    <Results>\r\n      <ResultsCaption>Content:</ResultsCaption>\r\n      <Text>{show && list.length > 0 ? <DisplayContent/> : file.content}</Text>\r\n      <ResultsCaption>Longest palindrome:</ResultsCaption>\r\n      <Longest>{show ? longest : null}</Longest>\r\n    </Results>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ file, palindrome }) => ({\r\n  file,\r\n  palindrome\r\n})\r\n\r\nexport default connect(mapStateToProps)(DisplayResults)\r\n","import styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  width: ${props => props.hidden ? '0px' : 'initial'};\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: ${props => props.hidden ? '8px 0px' : '8px 15px'};\r\n  overflow: ${props => props.hidden ? 'hidden' : 'visible'};\r\n  box-sizing: border-box;\r\n  color: ${props => props.theme.white};\r\n  text-transform: capitalize;\r\n  background: ${props => props.theme.mainAccent};\r\n  transition: .3s;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: ${props => props.theme.mainAccentLight};\r\n  }\r\n\r\n  > i {\r\n    margin-left: 5px;\r\n  }\r\n`\r\n\r\nexport default Button\r\n","import React from 'react'\r\n\r\nconst MaterialIcon = ({ children }) => {\r\n  return <i className=\"material-icons\">{children}</i>\r\n}\r\n\r\nexport default MaterialIcon\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setFileContent, setFileInfo, clearFile } from '../actions/file.action'\r\nimport { clearPalindromes } from '../actions/palindrome.action'\r\nimport { setError, removeError } from '../actions/error.actions'\r\nimport Button from '../styles/Button'\r\nimport styled from 'styled-components'\r\nimport Icon from './MaterialIcon'\r\n\r\nconst ImportButton = styled(Button)`\r\n  position: relative;\r\n`\r\nconst Input = styled.input`\r\n  position: absolute;\r\n  visibility: hidden;\r\n  width: 0;\r\n`\r\n\r\nconst ImportFile = ({ setFileContent, setFileInfo, clearPalindromes, clearFile, setError, removeError }) => {\r\n  const importHandler = e => {\r\n    resetApp()\r\n    const formats = [/\\.txt$/, /\\.rtf$/]\r\n    const file = e.target.files[0]\r\n\r\n    if (!file) {\r\n      return\r\n    }\r\n\r\n    const validType = formats.some(format => format.test(file.name))\r\n\r\n    if (!validType) {\r\n      setError('Incorrect file type: Please import *.txt or *.rtf')\r\n      return\r\n    }\r\n\r\n    const reader = new FileReader()\r\n\r\n    reader.readAsText(file)\r\n    reader.onload = function () {\r\n      setFileContent(this.result)\r\n    }\r\n\r\n    setFileInfo(file.name)\r\n  }\r\n  const clearValue = e => {\r\n    e.target.value = null\r\n  }\r\n\r\n  const resetApp = () => {\r\n    clearPalindromes()\r\n    clearFile()\r\n    removeError()\r\n  }\r\n\r\n  return (\r\n    <ImportButton as='label' className='btn nav-import'>\r\n      <Input\r\n        type='file'\r\n        accept=\".txt,.rtf\"\r\n        onClick={clearValue}\r\n        onChange={importHandler}/>\r\n      import\r\n      <Icon>publish</Icon>\r\n    </ImportButton>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setFileContent,\r\n  setFileInfo,\r\n  clearPalindromes,\r\n  clearFile,\r\n  setError,\r\n  removeError\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ImportFile)\r\n","import React, { Fragment } from 'react'\r\nimport ImportFile from './ImportFile'\r\nimport { connect } from 'react-redux'\r\nimport { clearFile } from '../actions/file.action'\r\nimport { showPalindromes, setPalindromes, clearPalindromes } from '../actions/palindrome.action'\r\nimport { getPalindromes } from '../utils/getPalindromes'\r\nimport { removeError } from '../actions/error.actions'\r\nimport styled from 'styled-components'\r\nimport Button from '../styles/Button'\r\nimport Icon from './MaterialIcon'\r\n\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 15px;\r\n  background: linear-gradient(to right, #1d3f42 10%, #601e22 100%);\r\n`\r\nconst LogoWrapper = styled.div`\r\n  margin-right: auto;\r\n`\r\nconst Logo = styled.span`\r\n  display: block;\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  text-transform: uppercase;\r\n  color: ${props => props.theme.white};\r\n  transition: .3s;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: ${props => props.theme.mainAccent};\r\n  }\r\n`\r\nconst LogoSub = styled.span`\r\n  color: ${props => props.theme.white};\r\n  font-size: 12px;\r\n`\r\nconst NavSub = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 30px;\r\n  padding: 5px 15px;\r\n  font-size: 12px;\r\n  color: ${props => props.theme.white};\r\n  background: ${props => props.theme.mainDark};\r\n`\r\nconst Message = styled.span`\r\n  color: ${props => props.error ? props.theme.mainAccent : props.theme.white};\r\n`\r\nconst RemoveBtn = styled.button`\r\n  border: none;\r\n  background: none;\r\n  color: ${props => props.theme.mainAccent};\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.mainAccentLight};\r\n  }\r\n`\r\n\r\nconst Header = ({ file, showPalindromes, setPalindromes, clearPalindromes, clearFile, error, removeError }) => {\r\n  const searchHandler = () => {\r\n    const palindromes = getPalindromes(file.content)\r\n    setPalindromes(palindromes)\r\n    showPalindromes()\r\n  }\r\n\r\n  const clearHandler = () => {\r\n    clearPalindromes()\r\n    clearFile()\r\n    removeError()\r\n  }\r\n\r\n  let message = null\r\n\r\n  if (error.msg) {\r\n    message = error.msg\r\n  } else if (file.name) {\r\n    message = file.name\r\n  } else {\r\n    message = 'Hello! Import *.txt or *.rtf file and press Search button'\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Nav>\r\n        <LogoWrapper>\r\n          <Logo>Plndrm</Logo>\r\n          <LogoSub>Gotta find 'em all</LogoSub>\r\n        </LogoWrapper>\r\n        <ImportFile/>\r\n        <Button\r\n          style={{ marginLeft: '10px' }}\r\n          hidden={!file.content}\r\n          onClick={searchHandler}>\r\n          search\r\n          <Icon>search</Icon>\r\n        </Button>\r\n      </Nav>\r\n      <NavSub>\r\n        <Message error={error.msg}>{message}</Message>\r\n        {\r\n          file.content\r\n            ? <RemoveBtn onClick={clearHandler}>\r\n              <Icon>remove_circle</Icon>\r\n            </RemoveBtn>\r\n            : null\r\n        }\r\n      </NavSub>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ file, error }) => ({\r\n  file,\r\n  error\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  showPalindromes,\r\n  setPalindromes,\r\n  clearPalindromes,\r\n  clearFile,\r\n  removeError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\nimport Results from './DisplayResults'\nimport Header from './Header'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  max-width: 600px;\n  height: 100vh;\n  margin: 0 auto;\n  font-family: Roboto;\n  font-size: 16px;\n`\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <Header/>\n      <Results/>\n    </Wrapper>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './styles/reset.css'\nimport App from './components/App'\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n  main: '#1d3f42',\n  mainDark: '#10292b',\n  mainAccent: '#ff4341',\n  mainAccentLight: '#ff6c62',\n  back: '#e5eeeb',\n  borderRadius: '5px',\n  borderColor: '#d3dcd9',\n  white: '#ffffff'\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App/>\n    </ThemeProvider>\n  </Provider>, document.getElementById('root'))\n"],"sourceRoot":""}